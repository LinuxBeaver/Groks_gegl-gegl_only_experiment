# This is the build file for project "stroke"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.7.1

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

# Rules for linking.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

rule SHSYM
 command = /usr/bin/meson --internal symbolextractor '/home/contrast/Desktop/high_pass_of_box_blur$ (another$ copy)/build' $in $IMPLIB $out $CROSS
 description = Generating symbol file $out
 restat = 1

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate '/home/contrast/Desktop/high_pass_of_box_blur$ (another$ copy)' '/home/contrast/Desktop/high_pass_of_box_blur$ (another$ copy)/build' --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build stroke.so.p/stroke.c.o: c_COMPILER ../stroke.c
 DEPFILE = stroke.so.p/stroke.c.o.d
 DEPFILE_UNQUOTED = stroke.so.p/stroke.c.o.d
 ARGS = -Istroke.so.p -I. -I.. -I/usr/include/gegl-0.4 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/sysprof-4 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/gio-unix-2.0 -I/usr/include/json-glib-1.0 -I/usr/include/babl-0.1 -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O3 -fPIC -pthread -DBUILDING_STROKE

build stroke.so.p/stroke.so.symbols: SHSYM stroke.so
 IMPLIB = stroke.so

build stroke.so: c_LINKER stroke.so.p/stroke.c.o | /usr/lib64/libm.so /usr/lib64/libgegl-0.4.so /usr/lib64/libgegl-npd-0.4.so /usr/lib64/libgmodule-2.0.so /usr/lib64/libglib-2.0.so /usr/lib64/libjson-glib-1.0.so /usr/lib64/libgio-2.0.so /usr/lib64/libgobject-2.0.so /usr/lib64/libbabl-0.1.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -shared -fPIC -Wl,--start-group -Wl,-soname,stroke.so /usr/lib64/libgegl-0.4.so /usr/lib64/libgegl-npd-0.4.so -lm -Wl,--export-dynamic /usr/lib64/libgmodule-2.0.so -pthread /usr/lib64/libglib-2.0.so /usr/lib64/libjson-glib-1.0.so /usr/lib64/libgio-2.0.so /usr/lib64/libgobject-2.0.so /usr/lib64/libbabl-0.1.so -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-ctags: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal tags ctags '/home/contrast/Desktop/high_pass_of_box_blur$ (another$ copy)'
 pool = console

build ctags: phony meson-ctags

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony stroke.so

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

default all

